% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/test_claude.R
\name{diagnose_sample_parity}
\alias{diagnose_sample_parity}
\title{Diagnose Paired Sample Completeness}
\usage{
diagnose_sample_parity(
  seurat_obj,
  config,
  grouping_vars = "patient",
  check_var = "timepoint",
  required_values = c("pre", "post"),
  allow_extra = FALSE
)
}
\arguments{
\item{seurat_obj}{Seurat object.}

\item{config}{List. Configuration from create_analysis_config().}

\item{grouping_vars}{Character vector. Metadata columns defining groups
(e.g., c("patient", "drug")). Each unique combination will be checked.}

\item{check_var}{String. The metadata column to check for parity
(typically "timepoint").}

\item{required_values}{Character vector. Values that MUST be present in
check_var for each group (e.g., c("pre", "post")).}

\item{allow_extra}{Logical. If FALSE, groups with additional values beyond
required_values will fail validation.}
}
\value{
A list with components:
\describe{
\item{summary}{Data frame with one row per group, showing counts and pass/fail status}
\item{passed_samples}{Character vector of sample IDs that passed validation}
\item{failed_groups}{Character vector of group IDs that failed}
\item{message}{Summary message}
}
}
\description{
For paired/longitudinal analyses, checks whether each patient (or group) has
complete and balanced representation of required conditions. For example,
ensures each patient has both "pre" and "post" timepoints with equal numbers
of samples, and no other timepoints.
}
\examples{
# Check if each patient has both pre and post timepoints
parity_check <- diagnose_sample_parity(
  seurat_obj = sobj,
  config = config,
  grouping_vars = c("patient", "drug"),
  check_var = "timepoint",
  required_values = c("pre", "post"),
  allow_extra = FALSE
)

# Subset to valid samples
sobj_paired <- subset(sobj, cells = parity_check$passed_samples)
}
