% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plots.R
\name{mybox_df}
\alias{mybox_df}
\title{Generate boxplots of average feature values from a data frame.}
\usage{
mybox_df(
  df,
  features,
  sample_col,
  group.by,
  split.by,
  idents = NULL,
  ncol = 3,
  pt.size = 0,
  violin = FALSE
)
}
\arguments{
\item{df}{A data frame. Each row should represent a minimal data unit (e.g., a cell).}

\item{features}{A character vector of feature column names to plot.}

\item{sample_col}{Character string: the name of the column identifying samples/patients.}

\item{group.by}{Character string: the name of the column for primary grouping on the x-axis. If NULL, a single group "Overall" is used.}

\item{split.by}{Character string: the name of the column for secondary grouping, creating side-by-side boxplots.}

\item{idents}{Optional: A character vector of values from the \code{group.by} column to include. If NULL, all values are shown.}

\item{ncol}{Integer: number of columns for arranging plots if multiple features are provided. Default is 3.}

\item{pt.size}{Numeric: size of points for individual sample averages. If 0, points are not shown. Default is 0.}

\item{violin}{Logical: whether to overlay violin plots. Default is FALSE.}
}
\value{
A ggplot object (created by \code{patchwork}) combining plots for all features.
}
\description{
This function takes a data frame where each row is a minimal data unit.
It calculates the average of specified features per sample, grouped by a
primary grouping variable and a secondary splitting variable. It then generates
boxplots showing the distribution of these sample averages.
}
\examples{
\dontrun{
# Create a sample data frame
set.seed(123)
n_cells <- 500
example_df <- data.frame(
  feature1 = rnorm(n_cells, 10, 2),
  feature2 = rpois(n_cells, 5),
  sample_id = sample(paste0("Sample", 1:5), n_cells, replace = TRUE),
  cell_type = sample(c("TypeA", "TypeB", "TypeC"), n_cells, replace = TRUE),
  treatment = sample(c("DrugX", "Placebo"), n_cells, replace = TRUE)
)

# Plot average feature1 per sample, grouped by cell_type, split by treatment
# mybox_df(example_df,
#          features = "feature1",
#          sample_col = "sample_id",
#          group.by = "cell_type",
#          split.by = "treatment",
#          pt.size = 1.5,
#          violin = TRUE)

# Plot multiple features, no specific grouping (overall), split by treatment
# mybox_df(example_df,
#          features = c("feature1", "feature2"),
#          sample_col = "sample_id",
#          group.by = NULL,
#          split.by = "treatment",
#          ncol = 2,
#          pt.size = 1)
}
}
