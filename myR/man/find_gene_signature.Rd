% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/signature.R
\name{find_gene_signature}
\alias{find_gene_signature}
\title{Find Gene Signatures that Best Separate Target Variable}
\usage{
find_gene_signature(
  data,
  meta.data = NULL,
  target_var,
  target_group = NULL,
  method = c("tree_based", "lasso", "limma", "nmf", "wilcoxon", "gam", "pca_loadings"),
  n_features = 50,
  preprocess = TRUE,
  min_cells = 10,
  min_pct = 0.01,
  return_model = FALSE,
  seed = 42,
  ...
)
}
\arguments{
\item{data}{Seurat object, count matrix, or data.frame with genes as rows/columns}

\item{meta.data}{Optional metadata data.frame (required if data is not Seurat)}

\item{target_var}{Column name in metadata representing the target variable}

\item{target_group}{For numeric targets: quantile cutoff (0-1) or list(low=0.25, high=0.75)
For factor: specific levels to compare (default: all vs all)}

\item{method}{One of: "tree_based", "lasso", "limma", "nmf", "wilcoxon", "gam", "pca_loadings"}

\item{n_features}{Number of top features to return (default: 50)}

\item{preprocess}{Logical, whether to normalize/scale data (default: TRUE)}

\item{min_cells}{Minimum cells expressing gene (default: 10)}

\item{min_pct}{Minimum percentage of cells expressing gene (default: 0.01)}

\item{return_model}{Logical, return full model object (default: FALSE)}

\item{seed}{Random seed for reproducibility (default: 42)}

\item{...}{Additional method-specific parameters}
}
\value{
List containing:
\itemize{
\item genes: Character vector of selected genes
\item weights: Named numeric vector of gene weights/importance
\item scores: Per-cell signature scores (if applicable)
\item performance: Separation metrics (AUC, accuracy, etc.)
\item method: Method used
\item model: Full model object (if return_model=TRUE)
}
}
\description{
Find Gene Signatures that Best Separate Target Variable
}
\examples{
# Random Forest for binary classification
result <- find_gene_signature(seurat_obj, target_var="cell_type", 
                               target_group=c("TypeA", "TypeB"), 
                               method="tree_based")

# LASSO for continuous variable (top vs bottom quartile)
result <- find_gene_signature(seurat_obj, target_var="pseudotime", 
                               target_group=0.25, method="lasso")

# NMF for multi-class
result <- find_gene_signature(count_matrix, meta.data=metadata, 
                               target_var="condition", method="nmf")
}
